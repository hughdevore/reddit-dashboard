{"version":3,"sources":["components/Article/ArticleBody.js","components/Comment/CommentInfo.js","components/Comment/CommentAuthor.js","components/Article/style.js","components/Article/Article.js","utils/fetchArticle.js","App.js","serviceWorker.js","index.js"],"names":["Content","Layout","Footer","ArticleContentLayout","backgroundColor","borderRadius","padding","whiteSpace","ArticleFooter","paddingTop","ArticleBody","props","article","comments","selftext","commentsLength","length","style","icon","faCommentAlt","width","Delete","Styled","span","Deleted","InfoPoints","InfoTime","CommentInfo","comment","created_utc","id","ups","date","moment","unix","paddingLeft","display","color","diff","key","onClick","deleteComment","faTrashAlt","CommentAuthor","textDecoration","href","author","Breadcrumb","div","Ups","Title","h1","ArticleContent","CommentContent","listStyleType","CommentText","ChildCommentContent","borderLeft","Header","Article","state","commentRoot","nestedIndex","secondNestedParentIndex","lastNestedParentIndex","parent_id","rootIndex","findIndex","updateDeletedComment","forEach","children","setState","body","this","builtCommentRoot","filter","sort","a","b","parentIndex","push","child","nestedChildren","nestedParentIndex","lastNestedChildren","status","title","subTitle","extra","type","margin","textAlign","subreddit","map","nestedComments","nestedChildrenComments","lastNestedChildrenComments","datetime","content","loading","isLoading","Component","fetchArticle","fetch","response","json","App","then","setTimeout","catch","err","console","log","minHeight","boxShadow","fontFamily","active","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5a075078.chunk.js","sourcesContent":["import React from 'react';\nimport { faCommentAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Layout } from 'antd';\n\nconst { Content, Footer } = Layout;\n\nconst ArticleContentLayout = {\n  backgroundColor: 'rgb(241.0, 241.0, 241.0)',\n  borderRadius: '15px',\n  padding: '2em 4em',\n  whiteSpace: 'pre-line'\n}\n\nconst ArticleFooter = {\n  paddingTop: '1em'\n}\n\nfunction ArticleBody(props) {\n  const { comments, selftext } = props.article;\n  const commentsLength = comments ? comments.length : 0;\n  return (\n    <Layout style={ArticleContentLayout}>\n      <Content >\n        {selftext}\n      </Content>\n      <Footer style={ArticleFooter}>\n        <FontAwesomeIcon icon={faCommentAlt} style={{ padding: '0 .75em 0 0', width: '2em' }} />\n        {comments ? commentsLength : 0} Comments\n    </Footer>\n    </Layout>\n  );\n}\n\nexport default ArticleBody;","import React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Styled from 'styled-components';\n\nexport const Delete = Styled.span`\n  display: inline-block;\n  margin-left: 1em;\n  font-size: 1em;\n  cursor: pointer;\n`;\n\nexport const Deleted = Styled.span`\n  display: inline-block;\n  margin-left: 1em;\n  font-size: 1em;\n`;\n\nexport const InfoPoints = Styled.span`\n  display: inline-block;\n  padding: 0 0 .5em 0;\n`;\n\nexport const InfoTime = Styled.span`\n  display: inline-block;\n  padding: 0 0 .5em 0;\n`;\n\nfunction CommentInfo(props) {\n  const { created_utc, id, ups = 0 } = props.comment;\n  const date = moment.unix(created_utc);\n  return (\n    <div style={{ paddingLeft: '1em', display: 'inline-block', color: 'rgb(36, 36, 36)' }}>\n      <InfoPoints>{1 === ups ? ups + ' point' : ups + ' points'}</InfoPoints>\n      <span style={{ padding: '0 .5em' }}>-</span>\n      <InfoTime>{date ? moment().diff(date, 'days') + ' days and ' + (moment().diff(date, 'hours') % 24) + ' hours ago' : 'Deleted'}</InfoTime>\n      {created_utc ?\n        <Delete key={id} onClick={() => props.deleteComment(props.comment)}>\n          <span key={id}><FontAwesomeIcon icon={faTrashAlt} /></span>\n        </Delete>\n        :\n        <Deleted key={id}>\n          <span key={id}><FontAwesomeIcon icon={faTrashAlt} /></span>\n        </Deleted>\n      }\n    </div>\n  )\n}\n\nexport default CommentInfo;","import React from 'react';\n\nfunction CommentAuthor(props) {\n  return (\n    <a style={{ textDecoration: 'none' }} href={'https://www.reddit.com/user/' + props.author !== '[deleted]' ? props.author : 'N/A'}>{props.author}</a>\n  );\n}\n\nexport default CommentAuthor;","import Styled from 'styled-components';\n\nexport const Breadcrumb = Styled.div`\n  color: rgb(109.0, 109.0, 109.0);\n  letter-spacing: 1px;\n`;\n\nexport const Ups = Styled.span`\n  display: inline-block;\n  margin-right: 2em;\n`;\n\nexport const Title = Styled.h1`\n  display: inline-block;\n  font-size: 2em;\n  font-weight: 500;\n  margin: 20px 0;\n  color: rgb(44.0, 44.0, 44.0);\n`;\n\nexport const ArticleContent = {\n  backgroundColor: 'white',\n  borderRadius: '15px',\n  padding: '2em',\n  color: 'rgb(98, 98, 98)'\n}\n\nexport const CommentContent = {\n  padding: '1em',\n  listStyleType: 'none'\n}\n\nexport const CommentText = Styled.span`\n  padding: .5em 0 1em 0;\n  display: inline-block;\n`;\n\nexport const ChildCommentContent = {\n  padding: '1em',\n  paddingLeft: '4em',\n  borderLeft: '2px solid rgb(239, 239, 239)',\n  listStyleType: 'none'\n}","import React, { Component, Fragment } from 'react';\nimport { Button, Comment, Layout, PageHeader, Result, Skeleton } from 'antd';\nimport ArticleBody from './ArticleBody';\nimport CommentInfo from '../Comment/CommentInfo';\nimport CommentAuthor from '../Comment/CommentAuthor';\nimport 'antd/lib/button/style/css';\n\nimport {\n  Breadcrumb,\n  Ups,\n  Title,\n  ArticleContent,\n  CommentContent,\n  CommentText,\n  ChildCommentContent,\n} from './style';\n\nconst { Content, Header } = Layout;\n\nclass Article extends Component {\n  state = {\n    commentRoot: []\n  }\n\n  updateDeletedComment(comment) {\n    comment.body = 'This comment has been deleted.';\n    comment.author = 'N/A';\n    comment.created_utc = false;\n    comment.ups = 0;\n    return comment;\n  }\n\n  deleteComment = (comment) => {\n    const { id, parent_id } = comment;\n    const { commentRoot } = this.state;\n    let rootIndex = commentRoot.findIndex(comment => comment.id === id);\n    // Handle deleting comments on the root level.\n    if (!parent_id) {\n      commentRoot[rootIndex] = this.updateDeletedComment(comment);\n    }\n    // Get the index of the comment and update the body content.\n    let nestedIndex;\n    let secondNestedParentIndex;\n    let lastNestedParentIndex;\n    // Loop through all of the comments and delete the one matching the id that was clicked.\n    if (parent_id && rootIndex === -1 && commentRoot) {\n      commentRoot.forEach(comment => {\n        nestedIndex = comment.children ? comment.children.findIndex(comment => comment.id === id) : false;\n        if (typeof nestedIndex === \"number\" && nestedIndex !== -1) {\n          comment.children[nestedIndex] = this.updateDeletedComment(comment.children[nestedIndex]);\n        }\n        if (nestedIndex === -1 && comment.children) {\n          comment.children.forEach(comment => {\n            secondNestedParentIndex = comment.children ? comment.children.findIndex(comment => comment.id === id) : -1;\n            if (typeof secondNestedParentIndex === \"number\" && secondNestedParentIndex !== -1) {\n              comment.children[secondNestedParentIndex] = this.updateDeletedComment(comment.children[secondNestedParentIndex]);\n            }\n            if (secondNestedParentIndex === -1 && comment.children) {\n              comment.children.forEach(comment => {\n                lastNestedParentIndex = comment.children ? comment.children.findIndex(comment => comment.id === id) : -1;\n                if (typeof lastNestedParentIndex === \"number\" && lastNestedParentIndex !== -1) {\n                  comment.children[lastNestedParentIndex] = this.updateDeletedComment(comment.children[lastNestedParentIndex]);\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n    this.setState({ commentRoot });\n  }\n\n  componentDidMount() {\n    if (this.props.article) {\n      const { comments } = this.props.article;\n      const builtCommentRoot = [];\n      if (comments && comments.length) {\n        comments.forEach(comment => {\n          const { parent_id } = comment;\n          // Get the children and dedupe.\n          let children = comments.filter(comment => comment.parent_id === parent_id);\n          // Sort children by date.\n          children = children.sort((a, b) => b.created_utc - a.created_utc);\n          let parentIndex = builtCommentRoot.findIndex(comment => comment.id === parent_id);\n          // If the comment doesn't have the 'parent_id' field add it the top level of commentMap.\n          if (!parent_id) return builtCommentRoot.push(comment);\n          if (builtCommentRoot[parentIndex] && children) {\n            // Add the children to the root comments.\n            if (!builtCommentRoot[parentIndex].children) {\n              builtCommentRoot[parentIndex].children = children;\n            } else if (builtCommentRoot[parentIndex].children) {\n              builtCommentRoot[parentIndex].children.push(children);\n            }\n            // Loop through the children and get their children.\n            children.forEach(child => {\n              const { id } = child;\n              // Get the children of this child and dedupe.\n              let nestedChildren = comments.filter(comment => comment.parent_id === id);\n              // Sort children by date.\n              nestedChildren = nestedChildren.sort((a, b) => b.created_utc - a.created_utc);\n              // Get the index of this child.\n              let nestedParentIndex = builtCommentRoot[parentIndex].children.findIndex(child => child.id === id);\n              if (builtCommentRoot[parentIndex].children[nestedParentIndex] && nestedChildren) {\n                // Add the nestedChildren to the child.\n                if (!builtCommentRoot[parentIndex].children[nestedParentIndex].children) {\n                  builtCommentRoot[parentIndex].children[nestedParentIndex].children = nestedChildren;\n                } else if (builtCommentRoot[parentIndex].children[nestedParentIndex].children) {\n                  builtCommentRoot[parentIndex].children[nestedParentIndex].children.push(nestedChildren);\n                }\n                // Loop through the children and get their children.\n                nestedChildren.forEach(comment => {\n                  const { id } = comment;\n                  //console.log(comment);\n                  // Get the children of this child and dedupe.\n                  let lastNestedChildren = comments.filter(comment => comment.parent_id === id);\n                  // Sort children by date.\n                  lastNestedChildren = lastNestedChildren.sort((a, b) => b.created_utc - a.created_utc);\n                  // Get the index of this child.\n                  let lastNestedParentIndex = builtCommentRoot[parentIndex].children[nestedParentIndex].children.findIndex(child => child.id === id);\n                  if (builtCommentRoot[parentIndex].children[nestedParentIndex].children[lastNestedParentIndex] && lastNestedChildren) {\n                    // Add the lastNestedChildren to the child.\n                    if (!builtCommentRoot[parentIndex].children[nestedParentIndex].children[lastNestedParentIndex].children) {\n                      builtCommentRoot[parentIndex].children[nestedParentIndex].children[lastNestedParentIndex].children = lastNestedChildren;\n                    } else if (builtCommentRoot[parentIndex].children[nestedParentIndex].children[lastNestedParentIndex].children) {\n                      builtCommentRoot[parentIndex].children[nestedParentIndex].children[lastNestedParentIndex].children.push(lastNestedChildren);\n                    }\n                  }\n                });\n              }\n            });\n          }\n        });\n        this.setState({ commentRoot: builtCommentRoot });\n      }\n    }\n  }\n\n  render() {\n    // Return early if there wasn't an article passed through.\n    if (!this.props.article) {\n      return (\n        <Fragment>\n          <Layout>\n            <Header>\n              <PageHeader>\n                <Result\n                  status=\"404\"\n                  title=\"Post not Found!\"\n                  subTitle=\"Sorry, the reddit post you visited does not exist.\"\n                  extra={<Button href=\"https://www.reddit.com/\" type=\"primary\" style={{ margin: '2em' }}>Back Home</Button>}\n                  style={{\n                    textAlign: 'center'\n                  }}\n                />\n              </PageHeader>\n            </Header>\n          </Layout>\n        </Fragment>\n      );\n    }\n\n    const { subreddit, title, ups } = this.props.article;\n    const { commentRoot } = this.state;\n\n    return (\n      <Fragment>\n        <Layout>\n          <Header>\n            <PageHeader>\n              <Breadcrumb><a href=\"https://www.reddit.com/r/unpopularopinion/\" style={{ color: 'rgb(109.0, 109.0, 109.0)' }}>r/{subreddit}</a></Breadcrumb>\n              <Fragment>\n                <Ups>{ups / 1000}k</Ups>\n                <Title>{title}</Title>\n              </Fragment>\n            </PageHeader>\n          </Header>\n          <Content style={ArticleContent}>\n            <ArticleBody article={this.props.article} />\n            <Layout style={{ paddingTop: '2em', display: 'inline-block' }}>\n              <Content>\n                {commentRoot && commentRoot.length ? commentRoot.map(comment => {\n                  const { author, body, children, id } = comment;\n                  const nestedComments = (children || []).map(comment => {\n                    const { author, body, children, id } = comment;\n                    const nestedChildrenComments = (children || []).map(comment => {\n                      const { author, body, children, id } = comment;\n                      const lastNestedChildrenComments = (children || []).map(comment => {\n                        const { author, body, id } = comment;\n                        if (!id) return false;\n                        return (\n                          <Comment\n                            key={id}\n                            author={<CommentAuthor author={author} />}\n                            datetime={<CommentInfo comment={comment} deleteComment={this.deleteComment} />}\n                            content={<CommentText>{body !== '[deleted]' ? body : 'This comment has been deleted.'}</CommentText>}\n                            style={ChildCommentContent}\n                          />\n                        );\n                      });\n                      if (!id) return false;\n                      return (\n                        <Comment\n                          key={id}\n                          author={<CommentAuthor author={author} />}\n                          datetime={<CommentInfo comment={comment} deleteComment={this.deleteComment} />}\n                          content={<CommentText>{body !== '[deleted]' ? body : 'This comment has been deleted.'}</CommentText>}\n                          style={ChildCommentContent}\n                        >\n                          {lastNestedChildrenComments}\n                        </Comment>\n                      );\n                    });\n                    if (!id) return false;\n                    return (\n                      <Fragment key={id}>\n                        <Comment\n                          key={id}\n                          author={<CommentAuthor author={author} />}\n                          datetime={<CommentInfo comment={comment} deleteComment={this.deleteComment} />}\n                          content={<CommentText>{body !== '[deleted]' ? body : 'This comment has been deleted.'}</CommentText>}\n                          style={ChildCommentContent}\n                        >\n                          {nestedChildrenComments}\n                        </Comment>\n                      </Fragment>\n                    );\n                  });\n                  if (!id) return false;\n                  return (\n                    <Fragment key={id}>\n                      <Comment\n                        key={id}\n                        author={<CommentAuthor author={author} />}\n                        datetime={<CommentInfo comment={comment} deleteComment={this.deleteComment} />}\n                        content={<CommentText>{body !== '[deleted]' ? body : 'This comment has been deleted.'}</CommentText>}\n                        style={CommentContent}\n                      >\n                        {nestedComments}\n                      </Comment>\n                    </Fragment>\n                  );\n                }) :\n                  <Skeleton loading={this.props.isLoading} />\n                }\n              </Content>\n            </Layout>\n          </Content>\n        </Layout>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default Article;","\nconst fetchArticle = async () => {\n  let response = await fetch('https://gist.githubusercontent.com/mkg0/6a4dca9067ad7a296204e7c9ecd977b0/raw/0b1ec16580ea1e970a73f5c85563c22631be7ad7/unpopularopinion-dataset.json');\n  return response.json() ?? null;\n}\n\nexport default fetchArticle;","import React, { Component, Fragment } from 'react';\nimport { Layout, Skeleton } from 'antd';\nimport 'antd/lib/skeleton/style/css';\nimport Article from './components/Article/Article';\nimport fetchArticle from './utils/fetchArticle';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      article: {},\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    // Fetch the data for the article and comments.\n    fetchArticle()\n      .then(article => {\n        setTimeout(() => {\n          this.setState({ article, isLoading: false })\n        }, 750);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const { article, isLoading } = this.state;\n    return (\n      <Fragment>\n        <Layout\n          style={{\n            backgroundColor: 'rgb(222, 228, 234)',\n            padding: '7em 10em',\n            minHeight: '100vh'\n          }}\n        >\n          <Layout\n            style={{\n              backgroundColor: 'rgb(249, 249, 249)',\n              padding: '3em 6em',\n              borderRadius: '15px',\n              boxShadow: '0 0 10px gray',\n              fontFamily: 'verdana'\n            }}\n          >\n            <Skeleton active={true} loading={isLoading}>\n              <Article article={article} />\n            </Skeleton>\n          </Layout>\n        </Layout>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/**\n * Don't register the service worker for this app yet since\n * it's still in development.\n */\nserviceWorker.unregister();\n"],"sourceRoot":""}